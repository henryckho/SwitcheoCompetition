{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.config.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/enum/ContractVersion.ts","webpack:///./src/app/enum/DeploymentType.ts","webpack:///./src/app/sc-contract/sc-contract.component.html","webpack:///./src/app/sc-contract/sc-contract.component.ts","webpack:///./src/app/sc-login/sc-login.component.html","webpack:///./src/app/sc-login/sc-login.component.ts","webpack:///./src/app/sc-wallet/sc-wallet.component.html","webpack:///./src/app/sc-wallet/sc-wallet.component.ts","webpack:///./src/app/switcheo.service.ts","webpack:///./src/app/utility.service.ts","webpack:///./src/app/wallet.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<h1>{{title}}</h1>\\r\\n<sc-contract (loadLogin)=\\\"loadLogin()\\\"></sc-contract>\\r\\n<sc-login *ngIf=\\\"loadLoginComponent\\\" (loadWallet)=\\\"loadWallet()\\\"></sc-login>\\r\\n<sc-wallet *ngIf=\\\"loadWalletComponent\\\"></sc-wallet>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n    private title = 'Switcheo Competition';\r\n    private loadLoginComponent = false;\r\n    private loadWalletComponent = false;\r\n\r\n    public loadLogin() {\r\n        this.loadLoginComponent = true;\r\n        this.loadWalletComponent = false;\r\n    }\r\n\r\n    public loadWallet() {\r\n        this.loadWalletComponent = true;\r\n    }\r\n}\r\n","export const config = {\r\n    MAINNET_URL: \"https://api.switcheo.network/v2\",\r\n    TESTNET_URL: \"https://test-api.switcheo.network/v2\"\r\n};","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { SCLoginComponent } from './sc-login/sc-login.component';\r\nimport { SCWalletComponent } from './sc-wallet/sc-wallet.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { SCContractComponent } from './sc-contract/sc-contract.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SCLoginComponent,\r\n    SCWalletComponent,\r\n    SCContractComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export enum ContractVersion {\r\n    V1 = 0,\r\n    V1_5 = 1,\r\n    V2 = 2\r\n}","export enum DeploymentType {\r\n    Testnet = 0,\r\n    Mainnet = 1\r\n}","module.exports = \"<div>\\r\\n    <select [(ngModel)]=\\\"deploymentType\\\">\\r\\n        <option value=\\\"0\\\">Testnet</option>\\r\\n        <option value=\\\"1\\\">Mainnet</option>\\r\\n    </select>\\r\\n    <select [(ngModel)]=\\\"contractVersion\\\">\\r\\n        <option value=\\\"0\\\">v1</option>\\r\\n        <option value=\\\"1\\\">v1.5</option>\\r\\n        <option value=\\\"2\\\">v2</option>\\r\\n    </select>\\r\\n    <input type=\\\"submit\\\" (click)=\\\"selectContract()\\\" />\\r\\n</div>\"","import { Component, EventEmitter, Output, OnInit } from '@angular/core';\r\n\r\nimport { SwitcheoService } from '../switcheo.service';\r\n\r\nimport { DeploymentType } from '../enum/DeploymentType';\r\nimport { ContractVersion } from '../enum/ContractVersion';\r\n\r\n@Component({\r\n    selector: 'sc-contract',\r\n    templateUrl: 'sc-contract.component.html'\r\n})\r\n\r\nexport class SCContractComponent implements OnInit {\r\n    @Output() loadLogin = new EventEmitter();   \r\n    private deploymentType: string = \"0\";\r\n    private contractVersion: string = \"2\";\r\n\r\n    constructor(\r\n        private switcheoService: SwitcheoService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.selectContract();\r\n    }\r\n\r\n    public selectContract() {\r\n        let deploymentType: DeploymentType = parseInt(this.deploymentType);\r\n        let contractVersion: ContractVersion = parseInt(this.contractVersion);\r\n        this.switcheoService.selectContract(deploymentType, contractVersion)\r\n            .subscribe(_ => this.loadLogin.emit());\r\n    }\r\n}","module.exports = \"<div>\\r\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"privateKey\\\" placeholder=\\\"Private Key\\\" />\\r\\n    <input type=\\\"submit\\\" (click)=\\\"loginToWallet()\\\" />\\r\\n</div>\"","import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { WalletService } from '../wallet.service';\r\n\r\n@Component({\r\n    selector: 'sc-login',\r\n    templateUrl: 'sc-login.component.html'\r\n})\r\n\r\nexport class SCLoginComponent {\r\n    @Output() loadWallet = new EventEmitter();\r\n    private privateKey: string = \"\";\r\n\r\n    constructor(\r\n        private walletService: WalletService\r\n    ) { }\r\n\r\n    public loginToWallet() {\r\n        let loggedInToWallet = this.walletService.loginToWallet(this.privateKey);\r\n        if(loggedInToWallet) {\r\n            this.loadWallet.emit();\r\n        }\r\n    }\r\n}","module.exports = \"<div>\\r\\n    <h1>Contract Wallet</h1>\\r\\n    <div *ngIf=\\\"isWalletLoaded\\\">\\r\\n        <ul>\\r\\n            <li *ngFor=\\\"let key of assetList\\\">\\r\\n                {{key}} : \\r\\n                <div *ngIf=\\\"contractWalletBalance[key] != null && contractWalletBalance[key].displayBalance > 0\\\">\\r\\n                    <span>\\r\\n                        {{contractWalletBalance[key].displayBalance}}\\r\\n                    </span>\\r\\n                    <input type=\\\"number\\\"\\r\\n                            (input)=\\\"displayInputAsDecimal($event, key)\\\"\\r\\n                            [(ngModel)]=\\\"contractWalletBalance[key].withdrawAmount\\\"\\r\\n                            min=\\\"0\\\"\\r\\n                            max=\\\"{{contractWalletBalance[key].displayBalance}}\\\"\\r\\n                            step=\\\"0.00000001\\\" />\\r\\n                    <button (click)=\\\"withdraw('neo', key)\\\" [disabled]=\\\"contractWalletBalance[key].isWithdrawDisabled\\\">\\r\\n                        Withdraw\\r\\n                    </button>\\r\\n                    <span *ngIf=\\\"contractWalletBalance[key].errorMessage\\\">{{contractWalletBalance[key].errorMessage}}</span>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"lockedWalletBalance[key] != null && lockedWalletBalance[key].displayBalance > 0\\\">\\r\\n                    <b>{{lockedWalletBalance[key].displayBalance}}</b>\\r\\n                </div>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { SwitcheoService } from '../switcheo.service';\r\nimport { UtilityService } from '../utility.service';\r\n\r\nimport { ResponseToken, ResponseTokenList } from '../models/response/responseToken';\r\nimport { ResponseContractWallet } from '../models/response/responseContractWallet';\r\nimport { ContractWalletBalance } from '../models/contractWalletBalance';\r\nimport { LockedWalletBalance } from '../models/lockedWalletBalance';\r\n\r\n@Component({\r\n    selector: 'sc-wallet',\r\n    templateUrl: 'sc-wallet.component.html'\r\n})\r\n\r\nexport class SCWalletComponent implements OnInit {\r\n    public isLoading: boolean = false;\r\n    public isWalletLoaded: boolean = false;\r\n    private tokenList: ResponseTokenList = {};\r\n    private assetList: string[] = [];\r\n    private contractWalletBalance: {[key:string]: ContractWalletBalance} = {};\r\n    private lockedWalletBalance: {[key:string]: LockedWalletBalance} = {};\r\n\r\n    constructor(\r\n        private switcheoService: SwitcheoService,\r\n        private utilityService: UtilityService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.switcheoService.getTokenList()\r\n        .subscribe((tokenList: ResponseTokenList) => {\r\n            this.tokenList = tokenList;\r\n            this.isLoading = true;\r\n            this.resetWallet();\r\n            this.updateWalletBalances();\r\n        });\r\n    }\r\n\r\n    public withdraw(blockchain, token): void {\r\n        let tokenAsset: ResponseToken = this.tokenList[token];\r\n        let contractWallet: ContractWalletBalance = this.contractWalletBalance[token];\r\n        let withdrawAmount: number = this.utilityService.convertDisplayToBalance(contractWallet.withdrawAmount, tokenAsset.decimals);\r\n        contractWallet.isWithdrawDisabled = true;\r\n        this.switcheoService.withdrawTokens(blockchain, token, withdrawAmount)\r\n            .subscribe(\r\n                _ => this.updateWalletBalances(),\r\n                (err) => contractWallet.errorMessage = err.error.error\r\n            );\r\n    }\r\n\r\n    public displayInputAsDecimal(element, token) {\r\n        let tokenAsset: ResponseToken = this.tokenList[token];\r\n        element.target.value = Number(element.target.value).toFixed(tokenAsset.decimals);\r\n    }\r\n\r\n    private resetWallet(): void {\r\n        this.isWalletLoaded = false;\r\n        this.assetList = [];\r\n        this.contractWalletBalance = {};\r\n        this.lockedWalletBalance = {};\r\n    }\r\n\r\n    private updateWalletBalances() {\r\n        this.switcheoService.getContractWalletBalance()\r\n            .subscribe((walletBalance: ResponseContractWallet) => {\r\n                this.buildWalletBalances(walletBalance);\r\n                this.isLoading = false;\r\n                this.isWalletLoaded = true;\r\n            });\r\n    }\r\n\r\n    private buildWalletBalances(walletBalance: ResponseContractWallet): void {\r\n        for(let key of Object.keys(this.tokenList)) {\r\n            let newAsset: boolean = false;\r\n            let assetDecimals: number = this.tokenList[key].decimals;\r\n            let confirmedToken: string = walletBalance.confirmed[key];\r\n            let lockedToken: string = walletBalance.locked[key];\r\n\r\n            if(confirmedToken && parseInt(confirmedToken) > 0) {\r\n                let confirmedTokenWalletBalance = this.utilityService.removeLastDecimalFromBalance(confirmedToken);\r\n                let confirmedTokenDisplayBalance = this.utilityService.convertBalanceToDisplay(confirmedTokenWalletBalance, assetDecimals);\r\n                this.contractWalletBalance[key] = {\r\n                    walletBalance: confirmedTokenWalletBalance,\r\n                    displayBalance: confirmedTokenDisplayBalance,\r\n                    isWithdrawDisabled: false\r\n                };\r\n                newAsset = true;\r\n            }\r\n\r\n            if(lockedToken && parseInt(lockedToken) > 0) {\r\n                let lockedTokenWalletBalance = this.utilityService.removeLastDecimalFromBalance(lockedToken);\r\n                let lockedTokenDisplayBalance = this.utilityService.convertBalanceToDisplay(lockedTokenWalletBalance, assetDecimals);\r\n                this.lockedWalletBalance[key] = {\r\n                    walletBalance: lockedTokenWalletBalance,\r\n                    displayBalance: lockedTokenDisplayBalance\r\n                };\r\n                newAsset = true;\r\n            }\r\n\r\n            if(newAsset) {\r\n                if(this.assetList.indexOf(key) == -1) {\r\n                    this.assetList.push(key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { tap, mergeMap } from 'rxjs/operators';\r\n\r\nimport { WalletService } from './wallet.service';\r\nimport { UtilityService } from './utility.service';\r\n\r\nimport { config } from './app.config';\r\n\r\nimport { CreateWithdraw } from './models/createWithdraw';\r\nimport { ExecuteWithdraw } from './models/executeWithdraw';\r\nimport { ResponseCreateWithdraw } from './models/response/responseCreateWithdraw';\r\nimport { ResponseTokenList } from './models/response/responseToken';\r\nimport { ResponseContractWallet } from './models/response/responseContractWallet';\r\nimport { ResponseContract, ResponseContractList } from './models/response/responseContract';\r\nimport { DeploymentType } from './enum/DeploymentType';\r\nimport { ContractVersion } from './enum/ContractVersion';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SwitcheoService {\r\n    private switcheoEndpoint: string = \"\";\r\n    private contractHash: string = \"\";\r\n    private blockchain: string = \"NEO\";\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private utilityService: UtilityService,\r\n        private walletService: WalletService\r\n    ) { }\r\n\r\n    public setDeploymentType(deploymentType: DeploymentType) {\r\n        switch(deploymentType) {\r\n            case DeploymentType.Mainnet:\r\n                this.switcheoEndpoint = config.MAINNET_URL;\r\n                break;\r\n            case DeploymentType.Testnet:\r\n                this.switcheoEndpoint = config.TESTNET_URL;\r\n                break;\r\n        }\r\n    }\r\n\r\n    public selectContract(deploymentType: DeploymentType, contractVersion: ContractVersion): Observable<ResponseContract> {\r\n        this.setDeploymentType(deploymentType);\r\n        return this.getContracts()\r\n                    .pipe(\r\n                        tap((response: ResponseContractList) => this.contractHash = response[this.blockchain][ContractVersion[contractVersion]])\r\n                    );\r\n    }\r\n\r\n    public getTokenList(): Observable<ResponseTokenList> {\r\n        return this.http.get<ResponseTokenList>(`${this.switcheoEndpoint}/exchange/tokens`);\r\n    }\r\n\r\n    public getContractWalletBalance(): Observable<ResponseContractWallet> {\r\n        let scriptHashAddress: string = this.walletService.getScriptHash();\r\n        return this.http.get<ResponseContractWallet>(`${this.switcheoEndpoint}/balances?addresses[]=${scriptHashAddress}&contract_hashes[]=${this.contractHash}`);\r\n    }\r\n\r\n    public withdrawTokens(blockchain: string, token: string, amount: number): Observable<Object> {\r\n        return this.createWithdrawTokens(blockchain, token, amount)\r\n        .pipe(\r\n            mergeMap((response: ResponseCreateWithdraw) => this.executeWithdrawToken(response.id))\r\n        );\r\n    }\r\n\r\n    private getContracts(): Observable<ResponseContract> {\r\n        return this.http.get<ResponseContract>(`${this.switcheoEndpoint}/exchange/contracts`);\r\n    }\r\n\r\n    private createWithdrawTokens(blockchain: string, token: string, amount: number): Observable<ResponseCreateWithdraw> {\r\n        let address: string = this.walletService.getScriptHash();\r\n        let params: CreateWithdraw = {\r\n            blockchain,\r\n            asset_id: token,\r\n            amount,\r\n            contract_hash: this.contractHash,\r\n            timestamp: this.utilityService.getTimestamp()\r\n        };\r\n        let signature: string = this.walletService.signParams(params);\r\n        let apiParams = { ...params, address, signature };\r\n\r\n        return this.http.post<ResponseCreateWithdraw>(`${this.switcheoEndpoint}/withdrawals`, apiParams);\r\n    }\r\n\r\n    private executeWithdrawToken(id: string) : Observable<Object> {\r\n        let params: ExecuteWithdraw = {\r\n            id,\r\n            timestamp: this.utilityService.getTimestamp()\r\n        };\r\n        let signature: string = this.walletService.signParams(params);\r\n        let apiParams = { ...params, signature };\r\n        \r\n        return this.http.post(`${this.switcheoEndpoint}/withdrawals/${id}/broadcast`, apiParams);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UtilityService {\r\n\r\n    constructor() { }\r\n    \r\n    public getTimestamp(): number{\r\n        return new Date().getTime();\r\n    }\r\n    \r\n    public removeLastDecimalFromBalance(balance: string): string {\r\n        return balance.substring(0, balance.lastIndexOf('.'));\r\n    }\r\n\r\n    public convertBalanceToDisplay(balance: string, decimals: number) : string {\r\n        return (parseInt(balance) / Math.pow(10, decimals)).toFixed(decimals);\r\n    }\r\n\r\n    public convertDisplayToBalance(balance: number, decimals: number) : number {\r\n        return balance * Math.pow(10, decimals);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { u, wallet, tx } from '@cityofzion/neon-js';\r\n\r\nimport stringify from 'json-stable-stringify';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class WalletService {\r\n    private loggedInWallet: wallet.Account = null;\r\n\r\n    constructor() { }\r\n\r\n    public loginToWallet(privateKey: string) : boolean {\r\n        this.loggedInWallet = null;\r\n\r\n        if(privateKey) {\r\n            try {\r\n                this.loggedInWallet = new wallet.Account(privateKey);\r\n            }\r\n            catch{}\r\n        }\r\n        \r\n        return this.loggedInWallet != null;\r\n    }\r\n\r\n    public getPrivateKey(): string {\r\n        return this.loggedInWallet.privateKey;\r\n    }\r\n\r\n    public getScriptHash(): string{\r\n        return this.loggedInWallet.scriptHash;\r\n    }\r\n    \r\n    public signParams(reqParams): string {\r\n        let paramsString: string = stringify(reqParams);\r\n        let paramsHexString: string = u.str2hexstring(paramsString);\r\n        \r\n        let lengthHex: string = (paramsHexString.length / 2).toString(16).padStart(2, '0');\r\n        let serialisedTransaction: string = `010001f0${lengthHex}${paramsHexString}0000`;\r\n        return this.signMessage(serialisedTransaction);\r\n    }\r\n\r\n    private signMessage(message: string): string {\r\n        let privateKey = this.getPrivateKey();\r\n        return wallet.generateSignature(message, privateKey);\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}